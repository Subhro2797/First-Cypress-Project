{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2025-04-23T09:14:51.318Z",
    "end": "2025-04-23T09:15:14.817Z",
    "duration": 23499,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "7216e611-0934-4f92-b99a-fd77c8488d06",
      "title": "",
      "fullFile": "cypress/e2e/Login/login-negative.cy.js",
      "file": "cypress/e2e/Login/login-negative.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "86371391-2a66-43bb-bc8a-ba0746be5fba",
          "title": "Unsuccessful Login",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "test invalid login codes",
              "fullTitle": "Unsuccessful Login test invalid login codes",
              "timedOut": null,
              "duration": 17540,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wrap(loginData).should('have.property', 'code');\nObject.entries(loginData.code.inValidCode).forEach(([index, invalidCode]) => {\n  login = new _LoginPage.LoginPage();\n  login.urlvisit();\n  login.typeCode(invalidCode);\n  login.clickSubmit();\n  login.captureErrorMessage(invalidCode);\n  cy.wait(2000);\n});",
              "err": {},
              "uuid": "983852f5-791d-40b5-89d6-5e44f1b784a5",
              "parentUUID": "86371391-2a66-43bb-bc8a-ba0746be5fba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login without filling the code",
              "fullTitle": "Unsuccessful Login Login without filling the code",
              "timedOut": null,
              "duration": 558,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//visiting the URL\nlogin.urlvisit();\n//cliking the submit button\nlogin.clickSubmit();",
              "err": {},
              "uuid": "9fa5f4fd-e6b3-4940-b110-08e15a572f2a",
              "parentUUID": "86371391-2a66-43bb-bc8a-ba0746be5fba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Logs in with valid credentials, including leading and trailing spaces in password",
              "fullTitle": "Unsuccessful Login Logs in with valid credentials, including leading and trailing spaces in password",
              "timedOut": null,
              "duration": 812,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//const login = new LoginPage();\nlogin.urlvisit();\ncy.get('input[type=\"text\"]').should('be.visible').then(() => {\n  cy.wrap(loginData).should('have.property', 'code');\n  // Test with leading and trailing spaces in the password\n  const passwordWithSpaces = \"  \" + loginData.code.validCode + \"  \"; // Adding spaces before and after the code \n  login.typeCode(passwordWithSpaces); // Enter password with leading/trailing spaces\n  login.clickSubmit();\n});",
              "err": {},
              "uuid": "19b5205d-deed-49d1-8769-908da35da485",
              "parentUUID": "86371391-2a66-43bb-bc8a-ba0746be5fba",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "983852f5-791d-40b5-89d6-5e44f1b784a5",
            "9fa5f4fd-e6b3-4940-b110-08e15a572f2a",
            "19b5205d-deed-49d1-8769-908da35da485"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 18910,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports/mochawesome",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}